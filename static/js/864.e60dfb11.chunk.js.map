{"version":3,"file":"static/js/864.e60dfb11.chunk.js","mappings":"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","sources":["components/Styled/Styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactView/ConatctView.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n    font-size: 1.3em;\r\n    text-align: center;\r\n    color: #039be5;\r\n`;\r\n\r\nconst List = styled.ul`\r\n    text-align: center;\r\n    color: #039be5;\r\n`;\r\nconst ListItem = styled.li`\r\n    height: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    :not(:last-of-type) {\r\n        margin-bottom: 10px;\r\n    }\r\n    color: black;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    flex-direction: column;\r\n    margin: 5px auto;\r\n`;\r\n\r\nconst SpanName = styled.span`\r\n    margin-right: 16px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width: 100px;\r\n    margin: 8px auto;\r\n    border: 0;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    :hover,\r\n    :focus {\r\n        background-color: #039be5;\r\n        color: #fff;\r\n    }\r\n`;\r\nconst BtnDelete = styled.button`\r\n    height: 20px;\r\n    margin-top: 20px;\r\n    border: 0;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    :hover,\r\n    :focus {\r\n        background-color: #039be5;\r\n        color: #fff;\r\n    }\r\n`;\r\nconst Text = styled.p`\r\n    text-align: center;\r\n`;\r\n\r\nexport {\r\n    Text,\r\n    Title,\r\n    Form,\r\n    Wrapper,\r\n    SpanName,\r\n    Input,\r\n    Button,\r\n    List,\r\n    ListItem,\r\n    BtnDelete,\r\n};\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\r\n};\r\n","import { useState } from 'react';\r\nimport { Form, Wrapper, SpanName, Input, Button } from '../Styled/Styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { nanoid } from 'nanoid';\r\nimport { addNewContact } from '../../redux/contacts/contactActions';\r\nimport { useSelector } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\n\r\nfunction ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const nameId = nanoid();\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(getContacts);\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (\r\n            contacts.find(contact =>\r\n                contact.name\r\n                    .toLocaleLowerCase()\r\n                    .includes(name.toLocaleLowerCase()),\r\n            )\r\n        ) {\r\n            setName('');\r\n            setNumber('');\r\n            return alert(`${name} is already in contacts.`);\r\n        }\r\n        dispatch(addNewContact({ name, number }));\r\n        reset();\r\n    };\r\n\r\n    function reset() {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Wrapper>\r\n                <SpanName>Name</SpanName>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    required\r\n                    id={nameId}\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                />\r\n            </Wrapper>\r\n            <Wrapper>\r\n                Number\r\n                <Input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                />\r\n            </Wrapper>\r\n            <Button type=\"submit\">Add Contact</Button>\r\n        </Form>\r\n    );\r\n}\r\nexport default ContactForm;\r\n","import { BtnDelete, List, ListItem } from '../Styled/Styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { delContact } from '../../redux/contacts/contactActions';\r\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\r\n\r\nfunction ContactList() {\r\n    const dispatch = useDispatch();\r\n    const onDelete = id => dispatch(delContact(id));\r\n    const contacts = useSelector(getVisibleContacts);\r\n\r\n    return (\r\n        <List>\r\n            {contacts.map(contact => (\r\n                <ListItem key={contact.id}>\r\n                    <p>\r\n                        {contact.name}: <span>{contact.number}</span>\r\n                    </p>\r\n                    <BtnDelete\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            onDelete(contact.id);\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </BtnDelete>\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { filterContact } from '../../redux/contacts/contactActions';\r\nimport { getFilter } from '../../redux/contacts/selectors';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nfunction Filter() {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(getFilter);\r\n    const onChange = data => dispatch(filterContact(data.target.value));\r\n\r\n    return (\r\n        <Box>\r\n            <Typography\r\n                sx={{\r\n                    textAlign: 'center',\r\n                    mt: 2,\r\n                    mb: 2,\r\n                    typography: {\r\n                        fontFamily: '\"Apple Color Emoji\"',\r\n                        fontSize: 16,\r\n                        color: '#039be5',\r\n                    },\r\n                }}\r\n            >\r\n                {' '}\r\n                Find contact by name\r\n            </Typography>\r\n            <TextField\r\n                sx={{ ml: 14 }}\r\n                id=\"standard-basic\"\r\n                label=\"Filter\"\r\n                variant=\"standard\"\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={onChange}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import { useSelector } from 'react-redux';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport { Title, Text } from '../Styled/Styled';\r\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function ContactsView() {\r\n    const contacts = useSelector(getVisibleContacts);\r\n    return (\r\n        <div className=\"App\">\r\n            <Typography\r\n                sx={{\r\n                    textAlign: 'center',\r\n                    mt: 4,\r\n                    mb: 4,\r\n                    typography: {\r\n                        fontFamily: '\"Apple Color Emoji\"',\r\n                        fontSize: 24,\r\n                        color: '#039be5',\r\n                    },\r\n                }}\r\n            >\r\n                Phonebook\r\n            </Typography>\r\n            <ContactForm />\r\n            <Title>Contacts</Title>\r\n            <Filter />\r\n            {contacts.length ? (\r\n                <ContactList contacts={contacts} />\r\n            ) : (\r\n                <Text>Nothing</Text>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["Title","styled","List","ListItem","Form","Wrapper","SpanName","Input","Button","BtnDelete","Text","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","name","toLowerCase","includes","useState","setName","number","setNumber","nameId","nanoid","dispatch","useDispatch","useSelector","handleChange","e","target","value","onSubmit","preventDefault","find","contact","toLocaleLowerCase","alert","addNewContact","type","pattern","title","required","id","onChange","map","onClick","delContact","Box","Typography","sx","textAlign","mt","mb","typography","fontFamily","fontSize","color","TextField","ml","label","variant","data","filterContact","ContactsView","className","length"],"sourceRoot":""}